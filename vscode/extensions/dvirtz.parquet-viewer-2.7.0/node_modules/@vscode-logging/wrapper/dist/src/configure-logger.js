"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureLoggerInternal = void 0;
const logger_1 = require("@vscode-logging/logger");
const settings_1 = require("./settings");
const settings_changes_handler_1 = require("./settings-changes-handler");
function configureLoggerInternal(opts) {
    const logLevelSetting = settings_1.getLoggingLevelSetting({
        getConfiguration: opts.getConfiguration,
        loggingLevelProp: opts.loggingLevelProp
    });
    const sourceLocationTrackingSettings = settings_1.getSourceLocationTrackingSetting({
        getConfiguration: opts.getConfiguration,
        sourceLocationProp: opts.sourceLocationProp
    });
    const extensionLogger = logger_1.getExtensionLogger({
        extName: opts.extName,
        level: logLevelSetting,
        logPath: opts.logPath,
        sourceLocationTracking: sourceLocationTrackingSettings,
        logConsole: opts.logConsole,
        logOutputChannel: opts.logOutputChannel
    });
    settings_changes_handler_1.logLoggerDetails({
        logger: extensionLogger,
        logPath: opts.logPath,
        logLevel: logLevelSetting
    });
    settings_changes_handler_1.listenToLogSettingsChanges({
        subscriptions: opts.subscriptions,
        onDidChangeConfiguration: opts.onDidChangeConfiguration,
        getConfiguration: opts.getConfiguration,
        loggingLevelProp: opts.loggingLevelProp,
        sourceLocationProp: opts.sourceLocationProp,
        logger: extensionLogger,
        logPath: opts.logPath
    });
    return extensionLogger;
}
exports.configureLoggerInternal = configureLoggerInternal;
//# sourceMappingURL=configure-logger.js.map