import { Event, TreeDataProvider, TreeItem } from "vscode";
import { ConnectionsTreeDataModelEntry, ICdmConnectionEntry, ICdmSchemaEntry } from "./ConnectionsTreeDataModel";
import { DBConnectionViewProvider } from "../../web-views/DBConnectionViewProvider";
export declare class ConnectionsTreeDataProvider implements TreeDataProvider<ConnectionsTreeDataModelEntry> {
    #private;
    private static nextId;
    connections: ICdmConnectionEntry[];
    private expandedMrsTreeItems;
    private changeEvent;
    private refreshMrsRoutersTimer;
    private requiredRouterVersion?;
    private clearCurrentSchemas;
    get onDidChangeTreeData(): Event<ConnectionsTreeDataModelEntry | undefined>;
    constructor();
    dispose(): void;
    refresh(entry?: ConnectionsTreeDataModelEntry): void;
    providerStateChanged(provider: DBConnectionViewProvider, active: boolean): void;
    makeCurrentSchema(entry: ICdmSchemaEntry): void;
    resetCurrentSchemas(): void;
    getTreeItem(entry: ConnectionsTreeDataModelEntry): TreeItem;
    getParent(entry: ConnectionsTreeDataModelEntry): ConnectionsTreeDataModelEntry | undefined;
    getChildren(entry?: ConnectionsTreeDataModelEntry): Promise<ConnectionsTreeDataModelEntry[]>;
    closeAllConnections(): Promise<void>;
    readonly didExpandElement: (entry: ConnectionsTreeDataModelEntry) => void;
    readonly didCollapseElement: (entry: ConnectionsTreeDataModelEntry) => void;
    readonly refreshMrsRouters: () => void;
    private updateConnections;
    private updateSchemaList;
    private doUpdateSchemaList;
    private loadSchemaGroupMembers;
    private loadTableMembers;
    private loadMrsServices;
    private loadMrsServiceEntries;
    private loadMrsAuthAppUsers;
    private loadMrsContentSetFiles;
    private loadMrsDbObjects;
    private refreshConnections;
    private proxyRequest;
}
