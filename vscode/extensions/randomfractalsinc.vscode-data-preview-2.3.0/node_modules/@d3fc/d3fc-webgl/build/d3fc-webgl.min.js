(function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("d3-scale"),require("d3-shape")):"function"==typeof define&&define.amd?define(["exports","d3-scale","d3-shape"],a):(e=e||self,a(e.fc=e.fc||{},e.d3,e.d3))})(this,function(e,a,t){'use strict';var i=Math.min;function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})),t.push.apply(t,n)}return t}function o(e){for(var a,t=1;t<arguments.length;t++)a=null==arguments[t]?{}:arguments[t],t%2?r(a,!0).forEach(function(t){n(e,t,a[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(a).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))});return e}a=a&&a.hasOwnProperty("default")?a["default"]:a,t=t&&t.hasOwnProperty("default")?t["default"]:t;var l=function(){var e={},a={},t=function(t,n,r,o){Object.keys(e).forEach(function(a){e[a](t,n,a,r,o)}),Object.keys(a).forEach(function(e){a[e](t,n,e)})};return t.attribute=function(){for(var a=arguments.length,n=Array(a),r=0;r<a;r++)n[r]=arguments[r];return 1===n.length?e[n[0]]:(e[n[0]]=n[1],t)},t.uniform=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return 1===n.length?a[n[0]]:(a[n[0]]=n[1],t)},t},d={FLOAT:5126},u=function(){var e=null,a=1,t=d.FLOAT,n=!1,r=0,o=0,i=function a(t,n,r){null==e&&(e=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,e);var o=t.getAttribLocation(n,r);t.vertexAttribPointer(o,a.size(),a.type(),a.normalized(),a.stride(),a.offset()),t.enableVertexAttribArray(o)};return i.buffer=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],i):e},i.size=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],i):a},i.type=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],i):t},i.normalized=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],i):n},i.stride=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],i):r},i.offset=function(){return arguments.length?(o=0>=arguments.length?void 0:arguments[0],i):o},i},c=(e,a,t)=>{const n=a[t];if("function"!=typeof n)throw new Error(`Attempt to rebind ${t} which isn't a function on the source object`);return(...t)=>{var r=n.apply(a,t);return r===a?e:r}},f=(e,a,...t)=>{for(const n of t)e[n]=c(e,a,n);return e};const s=e=>a=>e.reduce((e,a)=>e&&a(e),a);var h=(e,a,...t)=>{const n=s(t);for(const r of Object.keys(a)){const t=n(r);t&&(e[t]=c(e,a,r))}return e},g=e=>e.map(e=>"string"==typeof e?new RegExp(`^${e}$`):e),p=(...e)=>(e=g(e),a=>e.every(e=>!e.test(a))&&a),v=function(){var e=u(),a=function(e,a,t,n,r){return e[r]},t=null,n=0,r=function(n,r){for(var o=e.size(),i=e.offset(),l=new Float32Array(i+n*r*o),d=0,u=0;u<n;u++)for(var c=0;c<r;c++)for(var f=0;f<o;f++)l[i+d++]=a(t,u,c,f,d);return l},o=function(a,t,o,i,l){if(!(n>=l)){var d=r(l,i);e(a,t,o),a.bindBuffer(a.ARRAY_BUFFER,e.buffer()),a.bufferData(a.ARRAY_BUFFER,d,a.DYNAMIC_DRAW),n=l}};return o.value=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],n=0,o):a},o.data=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],n=0,o):t},h(o,e,p("buffer")),o},m=function(e){var a=e,t=!0,n=function(e,t,n){var r=e.getUniformLocation(t,n);if(a instanceof Array)switch(a.length){case 1:e.uniform1fv(r,a);break;case 2:e.uniform2fv(r,a);break;case 3:e.uniform3fv(r,a);break;case 4:e.uniform4fv(r,a);break;default:throw new Error("Uniform supports up to 4 elements. ".concat(a.length," provided."));}else e.uniform1f(r,a)},r=function(e,a,r){t&&(t=!1,n(e,a,r))};return r.bind=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],r):n},r.data=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],t=!0,r):a},r},y=function(e){function a(e,a){e.push(a)}function t(e,a,t){var n=e.indexOf(t);e.splice(0<=n?n:e.length,0,a)}function n(e,a){var t=e.indexOf(a);-1===t&&e.push(a)}var r=[],o=[],i=function(){return e(r.join("\n"),o.join("\n"))};return i.appendHeader=function(e){return a(r,e),i},i.insertHeader=function(e,a){return t(r,e,a),i},i.appendHeaderIfNotExists=function(e){return n(r,e),i},i.appendBody=function(e){return a(o,e),i},i.insertBody=function(e,a){return t(o,e,a),i},i.appendBodyIfNotExists=function(e){return n(o,e),i},i},b=function(e,a){return"\nprecision mediump float;\nfloat inf = 1.0 / 0.0;\n".concat(e,"\nvoid main() {\n    ").concat(a,"\n}")},x=function(e,a){return"\nprecision mediump float;\n".concat(e,"\nvoid main() {\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    ").concat(a,"\n}")},S={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},V=function(){function e(e,a,t){if(!e)return!0;var r=n.getAttachedShaders(e),o=n.getShaderSource(r[0]),i=n.getShaderSource(r[1]);return a!==o||t!==i}function a(e,a){var r=t(e,n.VERTEX_SHADER),o=t(a,n.FRAGMENT_SHADER),i=n.createProgram();if(n.attachShader(i,r),n.attachShader(i,o),n.linkProgram(i),!n.getProgramParameter(i,n.LINK_STATUS)){var l=n.getProgramInfoLog(i);throw n.deleteProgram(i),new Error("Failed to link program : ".concat(l,"\n            Vertex Shader : ").concat(e,"\n            Fragment Shader : ").concat(a))}return i}function t(e,a){var t=n.createShader(a);if(n.shaderSource(t,e),n.compileShader(t),!n.getShaderParameter(t,n.COMPILE_STATUS)){var r=n.getShaderInfoLog(t);throw n.deleteShader(t),new Error("Failed to compile shader : ".concat(r,"\n            Shader : ").concat(e))}return t}var n=null,r=null,o=null,i=null,d=S.TRIANGLES,u=l(),c=1,f=function(t){var l=o(),f=i();e(r,l,f)&&(n.isProgram(r)&&n.deleteProgram(r),r=a(l,f)),n.useProgram(r),u.uniform("uScreen",m([n.canvas.width,n.canvas.height])),u(n,r,c,t),n.drawArrays(d,0,t*c)};return f.context=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],f):n},f.buffers=function(){return arguments.length?(u=0>=arguments.length?void 0:arguments[0],f):u},f.vertexShader=function(){return arguments.length?(o=0>=arguments.length?void 0:arguments[0],f):o},f.fragmentShader=function(){return arguments.length?(i=0>=arguments.length?void 0:arguments[0],f):i},f.mode=function(){return arguments.length?(d=0>=arguments.length?void 0:arguments[0],f):d},f.verticesPerElement=function(){return arguments.length?(c=0>=arguments.length?void 0:arguments[0],f):c},f},P=function(){var e=[0,1],a=[-1,1],t=0,n=function(){};return n.domain=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],n):e},n.range=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],n):a},n.coordinate=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],n):t},n},C=function(){function e(e){e.vertexShader().appendHeader("uniform vec4 ".concat(t(),"Offset;")).appendHeader("uniform vec4 ".concat(t(),"Scale;")),n.scaleComponent(e,"gl_Position")}var a=P(),t=function(){return"linear".concat(a.coordinate())},n=function(n){e(n);var r=a.domain()[1]-a.domain()[0],o=a.range()[1]-a.range()[0],i=a.range()[0]*(r/o)-a.domain()[0],l=[0,0,0,0],d=[1,1,1,1];l[a.coordinate()]=i,d[a.coordinate()]=o/r,n.buffers().uniform("".concat(t(),"Offset"),m(l)).uniform("".concat(t(),"Scale"),m(d))};return n.scaleComponent=function(e,a){return e.vertexShader().appendBody("".concat(a," = ").concat(a," + ").concat(t(),"Offset;")).appendBody("".concat(a," = ").concat(a," * ").concat(t(),"Scale;")),n},h(n,a),n},_=function(){function e(e,a){var t=Math.log10;return t(e)/t(a)}function a(e){e.vertexShader().appendHeader("uniform vec4 ".concat(r(),"Offset;")).appendHeader("uniform vec4 ".concat(r(),"Scale;")).appendHeader("uniform vec4 ".concat(r(),"Include;")).appendHeader("uniform float ".concat(r(),"Base;")),o.scaleComponent(e,"gl_Position")}var t=P(),n=10,r=function(){return"log".concat(t.coordinate())},o=function(o){a(o);var i=e(t.domain()[1],n)-e(t.domain()[0],n),l=t.range()[1]-t.range()[0],d=l/i,u=t.range()[0]-d*e(t.domain()[0],n),c=[0,0,0,0],f=[0,0,0,0],s=[0,0,0,0];c[t.coordinate()]=u,f[t.coordinate()]=d,s[t.coordinate()]=1,o.buffers().uniform("".concat(r(),"Offset"),m(c)).uniform("".concat(r(),"Scale"),m(f)).uniform("".concat(r(),"Include"),m(s)).uniform("".concat(r(),"Base"),m(n))};return o.scaleComponent=function(e,a){var t="".concat(r(),"Offset + (").concat(r(),"Scale * clamp(log(").concat(a,") / log(").concat(r(),"Base), -inf, inf))");return e.vertexShader().appendBody("".concat(a," = (").concat(r(),"Include * (").concat(t,")) + ((1.0 - ").concat(r(),"Include) * ").concat(a,");")),o},o.base=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],o):n},h(o,t),o},B=function(){function e(a,t){var e=Math.pow,n=Math.abs,r=Math.sign;return r(a)*e(n(a),t)}function a(e){e.vertexShader().appendHeader("uniform vec4 ".concat(r(),"Offset;")).appendHeader("uniform vec4 ".concat(r(),"Scale;")).appendHeader("uniform vec4 ".concat(r(),"Include;")).appendHeader("uniform float ".concat(r(),"Exp;")),o.scaleComponent(e,"gl_Position")}var t=P(),n=1,r=function(){return"pow".concat(t.coordinate())},o=function(o){a(o);var i=e(t.domain()[1],n)-e(t.domain()[0],n),l=t.range()[1]-t.range()[0],d=l/i,u=t.range()[0]-d*e(t.domain()[0],n),c=[0,0,0,0],f=[0,0,0,0],s=[0,0,0,0];c[t.coordinate()]=u,f[t.coordinate()]=d,s[t.coordinate()]=1,o.buffers().uniform("".concat(r(),"Offset"),m(c)).uniform("".concat(r(),"Scale"),m(f)).uniform("".concat(r(),"Include"),m(s)).uniform("".concat(r(),"Exp"),m(n))};return o.scaleComponent=function(e,a){var t="".concat(r(),"Offset + (").concat(r(),"Scale * sign(").concat(a,") * pow(abs(gl_Position), vec4(").concat(r(),"Exp)))");return e.vertexShader().appendBody("".concat(a," = (").concat(r(),"Include * (").concat(t,")) + ((1.0 - ").concat(r(),"Include) * ").concat(a,");")),o},o.exponent=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],o):n},h(o,t),o},w=function(e){var t=a.scaleIdentity(),n=null,r=e.copy.toString();return r===a.scaleLinear().copy.toString()?n=C().domain(e.domain()):r===a.scaleLog().copy.toString()?n=_().domain(e.domain()).base(e.base()):r===a.scalePow().copy.toString()?n=B().domain(e.domain()).exponent(e.exponent()):r===a.scaleTime().copy.toString()?n=C().domain(e.domain()):(n=C().domain(e.range()),t=e),{scale:t,glScale:n}},E={header:"attribute vec4 aColor;\n             varying vec4 vColor;",body:"vColor = aColor;"},Y={header:"attribute float aXValue;\n             attribute float aYValue;\n             attribute float aSize;\n             uniform float uLineWidth;\n             varying float vSize;",body:"vSize = 2.0 * sqrt(aSize / 3.14159);\n           gl_PointSize = vSize + uLineWidth + 1.0;\n           gl_Position = vec4(aXValue, aYValue, 0, 1);"},L={header:"attribute float aXValue;\n        attribute float aYValue;\n        attribute float aSize;\n        uniform float uLineWidth;\n        varying float vSize;",body:"vSize = sqrt(aSize);\n        gl_PointSize = vSize + uLineWidth + 1.0;\n        gl_Position = vec4(aXValue, aYValue, 0, 1);"},I={header:"attribute float aXValue;\n        attribute float aYValue;\n        attribute float aSize;\n        uniform float uLineWidth;\n        varying float vSize;",body:"vSize = sqrt((16.0 * aSize) / (3.0 * sqrt(3.0)));\n        gl_PointSize = vSize + uLineWidth + 1.0;\n        gl_Position = vec4(aXValue, aYValue, 0, 1);"},z={header:"attribute float aXValue;\n        attribute float aYValue;\n        attribute float aSize;\n        uniform float uStrokeWidth;\n        varying float vSize;\n        varying float vStrokeWidthRatio;",body:"vSize = 3.0 * sqrt(aSize / 5.0);\n        vStrokeWidthRatio = uStrokeWidth / (vSize + uStrokeWidth + 1.0);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aXValue, aYValue, 0, 1);"},X={header:"attribute float aXValue;\n        attribute float aYValue;\n        attribute float aXDirection;\n        attribute float aYDirection;\n        attribute float aBandwidth;\n        attribute float aColorIndicator;\n        varying float vColorIndicator;\n        uniform vec2 uScreen;\n        uniform float uLineWidth;",body:"vColorIndicator = aColorIndicator;\n    gl_Position = vec4(aXValue, aYValue, 0, 1);"},D={header:"attribute float aXValue;\n        attribute float aYValue;\n        attribute float aWidthValue;\n        attribute float aDirection;",body:"gl_Position = vec4(aXValue, aYValue, 0, 1);\n        vec4 origin = vec4(0.0, 0.0, 0.0, 0.0);\n        vec4 width = vec4(aWidthValue, 0.0, 0.0, 0.0);\n        gl_Position.x += (width.x - origin.x) / 2.0 * aDirection;"},W={header:"uniform float uLineWidth; // defines the width of the line\n        uniform vec2 uScreen; // the screen space canvas size (for normalizing vectors)\n        attribute vec2 aCorner; // defines which vertex in the line join we are considering\n        attribute float aXValue; attribute float aYValue; // the current vertex positions\n        attribute float aNextXValue; attribute float aNextYValue; // the next vertex positions\n        attribute float aPrevXValue; attribute float aPrevYValue; // the previous vertex positions\n        attribute float aDefined;\n        varying float vDefined;",body:"vDefined = aDefined;\n        vec4 curr = vec4(aXValue, aYValue, 0, 1);\n        gl_Position = curr;\n        vec4 next = vec4(aNextXValue, aNextYValue, 0, 0);\n        vec4 prev = vec4(aPrevXValue, aPrevYValue, 0, 0);"},A={body:"if (all(equal(gl_Position.xy, prev.xy))) {\n            prev.xy = gl_Position.xy + normalize(gl_Position.xy - next.xy);\n        }\n        if (all(equal(gl_Position.xy, next.xy))) {\n            next.xy = gl_Position.xy + normalize(gl_Position.xy - prev.xy);\n        }\n        vec2 A = normalize(normalize(gl_Position.xy - prev.xy) * uScreen);\n        vec2 B = normalize(normalize(next.xy - gl_Position.xy) * uScreen);\n        vec2 tangent = normalize(A + B);\n        vec2 miter = vec2(-tangent.y, tangent.x);\n        vec2 normalA = vec2(-A.y, A.x);\n        float miterLength = 1.0 / dot(miter, normalA);\n        vec2 point = normalize(A - B);\n        if (miterLength > 10.0 && sign(aCorner.x * dot(miter, point)) > 0.0) {\n            gl_Position.xy = gl_Position.xy - (aCorner.x * aCorner.y * uLineWidth * normalA) / uScreen.xy;\n        } else {\n            gl_Position.xy = gl_Position.xy + (aCorner.x * miter * uLineWidth * miterLength) / uScreen.xy;\n        }"},T={header:"attribute float aXValue;\n        attribute float aHighValue;\n        attribute float aLowValue;\n        attribute float aBandwidth;\n        attribute vec3 aCorner;\n        uniform vec2 uScreen;\n        uniform float uLineWidth;",body:"\n        float isLow = (aCorner.y + 1.0) / 2.0;\n        float yValue = isLow * aLowValue + (1.0 - isLow) * aHighValue;\n\n        float isEdgeCorner = abs(aCorner.x);\n        float lineWidthXDirection = (1.0 - isEdgeCorner) * aCorner.z;\n        float lineWidthYDirection = isEdgeCorner * aCorner.z;\n        \n        gl_Position = vec4(aXValue, yValue, 0, 1);\n        \n        float xModifier = ((uLineWidth * lineWidthXDirection) + (aBandwidth * aCorner.x));\n        float yModifier = (uLineWidth * lineWidthYDirection);\n    "},H={header:"attribute float aXValue;\n        attribute float aYValue;\n        attribute float aXPrevValue;\n        attribute float aYPrevValue;\n        attribute float aY0Value;\n        attribute float aY0PrevValue;\n        attribute vec3 aCorner;\n        attribute float aDefined;\n        varying float vDefined;\n        \n        float when_lt(float a, float b) {\n            return max(sign(b - a), 0.0);\n        }\n        \n        float and(float a, float b) {\n            return a * b;\n        }",body:"vDefined = aDefined;\n        gl_Position = vec4(0, 0, 0, 1);\n\n        float hasIntercepted = when_lt((aYValue - aY0Value) * (aYPrevValue - aY0PrevValue), 0.0);\n        float useIntercept = and(aCorner.z, hasIntercepted);\n        \n        float yGradient = (aYValue - aYPrevValue) / (aXValue - aXPrevValue);\n        float yConstant = aYValue - (yGradient * aXValue);\n\n        float y0Gradient = (aY0Value - aY0PrevValue) / (aXValue - aXPrevValue);\n        float y0Constant = aY0Value - (y0Gradient * aXValue);\n\n        float denominator = (yGradient - y0Gradient) + step(abs(yGradient - y0Gradient), 0.0);\n        float interceptXValue = (y0Constant - yConstant) / denominator;\n        float interceptYValue = (yGradient * interceptXValue) + yConstant;\n\n        gl_Position = vec4(interceptXValue * useIntercept, interceptYValue * useIntercept, 0, 1);\n        \n        gl_Position.x += (1.0 - useIntercept) * ((aCorner.x * aXValue) + ((1.0 - aCorner.x) * aXPrevValue));\n        gl_Position.y += (1.0 - useIntercept) * (1.0 - aCorner.y) * ((aCorner.x * aYValue) + ((1.0 - aCorner.x) * aYPrevValue));\n        gl_Position.y += (1.0 - useIntercept) * aCorner.y * ((aCorner.x * aY0Value) + ((1.0 - aCorner.x) * aY0PrevValue));"},N={header:"attribute float aXValue;\n        attribute float aYValue;\n        attribute float aXDirection;\n        attribute float aYDirection;\n        attribute float aBandwidth;\n        uniform vec2 uScreen;\n        uniform float uLineWidth;",body:"gl_Position = vec4(aXValue, aYValue, 0, 1);"},R=Object.freeze({scale:{header:"uniform vec2 uScale;",body:"gl_Position.xy = gl_Position.xy * uScale;"},translate:{header:"uniform vec2 uTranslate;",body:"gl_Position.xy = gl_Position.xy + uTranslate;"},multiColor:E,circle:Y,square:L,triangle:I,cross:z,rect:X,bar:D,preScaleLine:W,postScaleLine:A,errorBar:T,area:H,boxPlot:N}),O={header:"varying float vSize;",body:"float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n        discard;\n        return;\n    }"},F={header:"varying float vSize;",body:"vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n        float distance = max(abs(pointCoordTransform.x), abs(pointCoordTransform.y));"},k={header:"varying float vSize;",body:"vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n    float topEdgesDistance = abs(pointCoordTransform.x) - ((pointCoordTransform.y - 0.6) / sqrt(3.0));\n    float bottomEdgeDistance = pointCoordTransform.y + 0.5;\n    float distance = max(topEdgesDistance, bottomEdgeDistance);\n    if (distance > 1.0) {\n        discard;\n    }"},G={header:"varying float vSize;\n            varying float vStrokeWidthRatio;",body:"vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n    float innerCornerDistance = min(abs(pointCoordTransform.x), abs(pointCoordTransform.y)) + 0.66 - vStrokeWidthRatio;\n    float outerEdgeDistance = max(abs(pointCoordTransform.x), abs(pointCoordTransform.y));\n    float distance = max(innerCornerDistance, outerEdgeDistance);\n    if (distance > 1.0) {\n        discard;\n    }"},q={header:"varying float vColorIndicator;",body:"gl_FragColor = vec4(0.4, 0.8, 0, 1);\n    if (vColorIndicator < 0.0) {\n        gl_FragColor = vec4(0.8, 0.4, 0, 1);\n    }"},M={header:"varying float vDefined;",body:"if (vDefined < 0.5) {\n            discard;\n        }\n        gl_FragColor = vec4(0.86, 0.86, 0.86, 1);"},Q={body:"gl_FragColor.a = gl_FragColor.a * (1.0 - smoothstep(vSize - 2.0, vSize, distance * vSize));"},U={header:"varying vec4 vColor;",body:"gl_FragColor = vColor;"},j={header:"uniform vec4 uColor;",body:"gl_FragColor = uColor;"},K={header:"uniform vec4 uEdgeColor;\n             uniform float uLineWidth;",body:"float sEdge = smoothstep(vSize - uLineWidth - 2.0, vSize - uLineWidth, distance * (vSize + uLineWidth));\n           gl_FragColor = (uEdgeColor * sEdge) + ((1.0 - sEdge) * gl_FragColor);"},Z={header:"varying float vDefined;",body:"if (vDefined < 0.5) {\n        discard;\n    }"},$=Object.freeze({circle:O,square:F,triangle:k,cross:G,rect:q,area:M,pointAlias:Q,multiColor:U,seriesColor:j,pointEdge:K,line:Z}),J=function(){var e=y(b),a=y(x);return e.appendHeader(Y.header).appendBody(Y.body),a.appendHeader(O.header).appendBody(O.body),{vertex:function(){return e},fragment:function(){return a}}},ee=function(){var e=y(b),a=y(x);return e.appendHeader(L.header).appendBody(L.body),a.appendHeader(F.header).appendBody(F.body),{vertex:function(){return e},fragment:function(){return a}}},ae=function(){var e=y(b),a=y(x);return e.appendHeader(I.header).appendBody(I.body),a.appendHeader(k.header).appendBody(k.body),{vertex:function(){return e},fragment:function(){return a}}},te=function(){var e=y(b),a=y(x);return e.appendHeader(z.header).appendBody(z.body),a.appendHeader(G.header).appendBody(G.body),{vertex:function(){return e},fragment:function(){return a}}},ne=function(e){switch(e){case t.symbolCircle:return J();case t.symbolSquare:return ee();case t.symbolTriangle:return ae();case t.symbolCross:return te();default:throw new Error("Unrecognised symbol: ".concat(e));}},re=function(){var e=1,a=function(a){a.buffers().uniform("uLineWidth",m(e))};return a.lineWidth=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],a):e},a},oe=function(){var e=y(b),a=y(x);return e.appendHeader(W.header).appendBody(W.body),a.appendHeader(Z.header).appendBody(Z.body),{vertex:function(){return e},fragment:function(){return a}}},ie=function(){var e=y(b),a=y(x);return e.appendHeader(X.header).appendBody(X.body),a.appendHeader(q.header).appendBody(q.body),{vertex:function(){return e},fragment:function(){return a}}},le=function(){var e=y(b),a=y(x);return e.appendHeader(D.header).appendBody(D.body),{vertex:function(){return e},fragment:function(){return a}}},de=function(){var e=y(b),a=y(x);return e.appendHeader(T.header).appendBody(T.body),{vertex:function(){return e},fragment:function(){return a}}},ue=function(){var e=y(b),a=y(x);return e.appendHeader(H.header).appendBody(H.body),a.appendHeader(M.header).appendBody(M.body),{vertex:function(){return e},fragment:function(){return a}}},ce=function(){var e=y(b),a=y(x);return e.appendHeader(N.header).appendBody(N.body),{vertex:function(){return e},fragment:function(){return a}}};e.barFill=function(){var e=[.86,.86,.86,1],a=function(a){a.vertexShader().appendHeaderIfNotExists(E.header).appendBodyIfNotExists(E.body),a.fragmentShader().appendHeaderIfNotExists(U.header).appendBodyIfNotExists(U.body),a.buffers().uniform("uColor",m(e))};return a.color=function(){if(!arguments.length)return e;var t=0>=arguments.length?void 0:arguments[0],n="0x"+t[1]+t[2],r="0x"+t[3]+t[4],o="0x"+t[5]+t[6];return e=[+(n/255),+(r/255),+(o/255),1],a},a},e.baseAttributeBuilder=u,e.bufferBuilder=l,e.circlePointShader=J,e.fragmentShaderSnippets=$,e.glArea=function(){var e=P(),a=P(),t=function(){},n=v().value(function(e,a){return e[i(a+1,e.length-1)]}),r=v().value(function(e,a){return e[a]}),o=v().value(function(e,a){return e[i(a+1,e.length-1)]}),l=v().value(function(e,a){return e[a]}),d=v().value(function(e,a){return e[i(a+1,e.length-1)]}),u=v().value(function(e,a){return e[a]}),c=v().size(3).data([[0,0,0],[0,1,0],[1,1,1],[0,0,1],[1,0,0],[1,1,0]]).value(function(e,a,t,n){return e[t][n]}),s=v().value(function(e,a){var t=e[a],n=a===e.length-1?0:e[a+1];return t?n:t}),h=V().mode(S.TRIANGLES).verticesPerElement(6);h.buffers().attribute("aXValue",n).attribute("aXPrevValue",r).attribute("aYValue",o).attribute("aYPrevValue",l).attribute("aY0Value",d).attribute("aY0PrevValue",u).attribute("aCorner",c).attribute("aDefined",s);var g=function(n){var r=ue();h.vertexShader(r.vertex()).fragmentShader(r.fragment()),e.coordinate(0),e(h),a.coordinate(1),a(h),t(h),h(n-1)};return g.xValues=function(e){return n.data(e),r.data(e),g},g.yValues=function(e){return o.data(e),l.data(e),g},g.y0Values=function(e){return d.data(e),u.data(e),g},g.defined=function(e){return s.data(e),g},g.decorate=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],g):t},g.xScale=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],g):e},g.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],g):a},f(g,h,"context"),g},e.glBar=function(){var e=V().verticesPerElement(6),a=null,t=null,n=function(){},r=v().value(function(e,a){return e[a]}),o=v().data([null,null]).value(function(e,a,t){var n=[1,2,4].includes(t)?0:1;return e[n][a]}),i=v().value(function(e,a){return e[a]}),l=v().size(2).data([-1,-1,1,-1,1,1]).value(function(e,a,t){return e[t]}),d=function(d){var u=le();e.vertexShader(u.vertex()).fragmentShader(u.fragment()).mode(S.TRIANGLES),e.buffers().attribute("aXValue",r).attribute("aYValue",o).attribute("aWidthValue",i).attribute("aDirection",l),a.coordinate(0),a(e),t.coordinate(1),t(e),a.scaleComponent(e,"origin"),a.scaleComponent(e,"width"),n(e),e(d)};return d.xScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],d):a},d.yScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],d):t},d.decorate=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],d):n},d.xValues=function(e){return r.data(e),d},d.y0Values=function(e){return o.data([e,o.data()[1]]),d},d.yValues=function(e){return o.data([o.data()[0],e]),d},d.widths=function(e){return i.data(e),d},f(d,e,"context"),d},e.glBoxPlot=function(){var e=V().verticesPerElement(54),a=P(),t=P(),n=re(),r=v().value(function(e,a){return e[a]}),i=v().data({median:null,upperQuartile:null,lowerQuartile:null,high:null,low:null}).value(function(e,a,t){return[18,19,20,21,22,23].includes(t)?e.median[a]:[8,10,11,12,13,14,15,16,17,30,31,33,36,37,39].includes(t)?e.upperQuartile[a]:[24,25,26,27,28,29,32,34,35,38,40,41,42,43,45].includes(t)?e.lowerQuartile[a]:[0,1,2,3,4,5,6,7,9].includes(t)?e.high[a]:[44,46,47,48,49,50,51,52,53].includes(t)?e.low[a]:0}),l=v().data([0,0,0,0,0,0,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,-1,1,1,-1,-1,1,-1,1,1,-1,-1,1,0,0,0,0,0,0]).value(function(e,a,t){return e[t]}),d=v().data([1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,1,1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,1,1,-1,1,-1,-1]).value(function(e,a,t){return e[t]}),u=v().data({bandwidth:null,capWidth:null}).value(function(e,a,t){if(5>=t||48<=t){var n=e.capWidth[a];return[0,3,4,48,51,52].includes(t)?-n:n}if(11<t&&42>t){var r=e.bandwidth[a];return[12,15,16,18,21,22,24,27,28,30,31,32,33,34,35].includes(t)?-r:r}return 0}),c=function(o){var c=ce();e.vertexShader(c.vertex()).fragmentShader(c.fragment()).mode(S.TRIANGLES),e.buffers().attribute("aXValue",r).attribute("aYValue",i).attribute("aXDirection",l).attribute("aYDirection",d).attribute("aBandwidth",u),a.coordinate(0),a(e),t.coordinate(1),t(e),n(e),e.vertexShader().appendBody("\n                gl_Position.x += ((uLineWidth * aXDirection) + aBandwidth) / uScreen.x;\n                gl_Position.y += (uLineWidth * aYDirection) / uScreen.y;\n            "),e(o)};return c.xValues=function(e){return r.data(e),c},c.medianValues=function(e){var a=i.data();return i.data(o({},a,{median:e})),c},c.upperQuartileValues=function(e){var a=i.data();return i.data(o({},a,{upperQuartile:e})),c},c.lowerQuartileValues=function(e){var a=i.data();return i.data(o({},a,{lowerQuartile:e})),c},c.highValues=function(e){var a=i.data();return i.data(o({},a,{high:e})),c},c.lowValues=function(e){var a=i.data();return i.data(o({},a,{low:e})),c},c.bandwidth=function(e){var a=u.data();return u.data(o({},a,{bandwidth:e})),c},c.capWidth=function(e){var a=u.data();return u.data(o({},a,{capWidth:e})),c},c.xScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],c):a},c.yScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],c):t},f(c,e,"context"),f(c,n,"lineWidth"),c},e.glCandlestick=function(){var e=V().verticesPerElement(12),a=P(),t=P(),n=re(),r=function(){},l=v().value(function(e,a){return e[a]}),d=v().data({open:null,high:null,low:null,close:null}).value(function(e,a,t){return[6,7,9].includes(t)?e.open[a]:[2,4,5].includes(t)?e.high[a]:[0,1,3].includes(t)?e.low[a]:[8,10,11].includes(t)?e.close[a]:0}),u=v().data([1,-1,-1,1,1,-1,1,-1,-1,1,1,-1]).value(function(e,a,t){return e[t]}),c=v().value(function(e,a,t){var n=e.open[a],r=e.close[a];if([6,7,8,9,10,11].includes(t)){var o=i(n,r)===n;return[6,7,9].includes(t)?o?-1:1:o?1:-1}return 0}),s=v().value(function(e,a,t){if(6<=t&&11>=t){var n=e[a];return[6,9,10].includes(t)?n:-n}return 0}),h=v().value(function(e,a){var t=e.open[a],n=e.close[a];return t<n?1:-1}),g=function(o){var i=ie();e.vertexShader(i.vertex()).fragmentShader(i.fragment()).mode(S.TRIANGLES),e.buffers().attribute("aXValue",l).attribute("aYValue",d).attribute("aXDirection",u).attribute("aYDirection",c).attribute("aBandwidth",s).attribute("aColorIndicator",h),a.coordinate(0),a(e),t.coordinate(1),t(e),n(e),e.vertexShader().appendBody("\n        gl_Position.x += ((uLineWidth * aXDirection / 2.0) + (aBandwidth / 2.0)) / uScreen.x;\n        gl_Position.y += (uLineWidth * aYDirection / 2.0) / uScreen.y;\n      "),r(e),e(o)};return g.xValues=function(e){return l.data(e),g},g.openValues=function(e){var a=d.data(),t=o({},a,{open:e});return d.data(t),c.data(t),h.data(t),g},g.highValues=function(e){var a=d.data(),t=o({},a,{high:e});return d.data(t),c.data(t),h.data(t),g},g.lowValues=function(e){var a=d.data(),t=o({},a,{low:e});return d.data(t),c.data(t),h.data(t),g},g.closeValues=function(e){var a=d.data(),t=o({},a,{close:e});return d.data(t),c.data(t),h.data(t),g},g.bandwidth=function(e){return s.data(e),g},g.decorate=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],g):r},g.xScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],g):a},g.yScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],g):t},f(g,e,"context"),f(g,n,"lineWidth"),g},e.glErrorBar=function(){var e=V().verticesPerElement(18),a=P(),t=P(),n=re(),r=v().value(function(e,a){return e[a]}),o=v().value(function(e,a){return e[a]}),i=v().value(function(e,a){return e[a]}),l=v().value(function(e,a){return e[a]}),d=v().size(3).data([[0,1,1],[0,1,-1],[0,-1,-1],[0,1,1],[0,-1,1],[0,-1,-1],[1,-1,1],[1,-1,-1],[-1,-1,-1],[1,-1,1],[-1,-1,1],[-1,-1,-1],[-1,1,-1],[-1,1,1],[1,1,1],[-1,1,-1],[1,1,-1],[1,1,1]]).value(function(e,a,t,n){return e[t][n]}),u=function(u){var c=de();e.vertexShader(c.vertex()).fragmentShader(c.fragment()).mode(S.TRIANGLES),e.buffers().attribute("aXValue",r).attribute("aHighValue",o).attribute("aLowValue",i).attribute("aBandwidth",l).attribute("aCorner",d),a.coordinate(0),a(e),t.coordinate(1),t(e),n(e),e.vertexShader().appendBody("\n                gl_Position.x += xModifier / uScreen.x;\n                gl_Position.y += yModifier / uScreen.y;\n            "),e(u)};return u.xValues=function(e){return r.data(e),u},u.highValues=function(e){return o.data(e),u},u.lowValues=function(e){return i.data(e),u},u.bandwidth=function(e){return l.data(e),u},u.xScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],u):a},u.yScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],u):t},f(u,e,"context"),f(u,n,"lineWidth"),u},e.glLine=function(){var e=Math.max,a=P(),t=P(),n=function(){},r=re(),o=v().value(function(e,a){return e[a]}),l=v().value(function(e,a){return e[i(a+1,e.length-1)]}),d=v().value(function(a,t){return a[e(t-1,0)]}),u=v().value(function(e,a){return e[a]}),c=v().value(function(e,a){return e[i(a+1,e.length-1)]}),s=v().value(function(a,t){return a[e(t-1,0)]}),h=v().size(2).data([[-1,-1],[1,-1],[-1,1],[1,1]]).value(function(e,a,t,n){return e[t][n]}),g=v().value(function(e,a,t){var n=e[a];if(1>=t){var r=0===a?n:e[a-1];return n?r:n}var o=a===e.length-1?n:e[a+1];return n?o:n}),p=V().mode(S.TRIANGLE_STRIP).verticesPerElement(4);p.buffers().attribute("aXValue",o).attribute("aNextXValue",l).attribute("aPrevXValue",d).attribute("aYValue",u).attribute("aNextYValue",c).attribute("aPrevYValue",s).attribute("aCorner",h).attribute("aDefined",g);var m=function(e){var o=oe();p.vertexShader(o.vertex()).fragmentShader(o.fragment()),a.coordinate(0),a(p),t.coordinate(1),t(p),a.scaleComponent(p,"next"),t.scaleComponent(p,"next"),a.scaleComponent(p,"prev"),t.scaleComponent(p,"prev"),p.vertexShader().appendBody(A.body),r(p),n(p),p(e)};return m.xValues=function(e){return o.data(e),l.data(e),d.data(e),m},m.yValues=function(e){return u.data(e),c.data(e),s.data(e),m},m.defined=function(e){return g.data(e),m},m.decorate=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],m):n},m.xScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],m):a},m.yScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],m):t},f(m,p,"context"),f(m,r,"lineWidth"),m},e.glOhlc=function(){var e=V().verticesPerElement(18),a=P(),t=P(),n=re(),r=function(){},i=v().value(function(e,a){return e[a]}),l=v().data({open:null,high:null,low:null,close:null}).value(function(e,a,t){if([6,7,8,9,10,11].includes(t))return e.open[a];if([2,4,5].includes(t))return e.high[a];if([0,1,3].includes(t))return e.low[a];if([12,13,14,15,16,17].includes(t))return e.close[a];throw new Error("Invalid vertex ".concat(t))}),d=v().data([1,-1,-1,1,1,-1,0,0,-1,0,-1,-1,0,0,1,0,1,1]).value(function(e,a,t){return e[t]}),u=v().data([0,0,0,0,0,0,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1]).value(function(e,a,t){return e[t]}),c=v().value(function(e,a,t){if([8,10,11,14,16,17].includes(t)){var n=e[a];return[8,10,11].includes(t)?-n:n}return 0}),s=v().value(function(e,a){var t=e.open[a],n=e.close[a];return t<n?1:-1}),h=function(o){var f=ie();e.vertexShader(f.vertex()).fragmentShader(f.fragment()).mode(S.TRIANGLES),e.buffers().attribute("aXValue",i).attribute("aYValue",l).attribute("aXDirection",d).attribute("aYDirection",u).attribute("aBandwidth",c).attribute("aColorIndicator",s),a.coordinate(0),a(e),t.coordinate(1),t(e),n(e),e.vertexShader().appendBody("\n        gl_Position.x += ((uLineWidth * aXDirection / 2.0) + (aBandwidth / 2.0)) / uScreen.x;\n        gl_Position.y += (uLineWidth * aYDirection / 2.0) / uScreen.y;\n      "),r(e),e(o)};return h.xValues=function(e){return i.data(e),h},h.openValues=function(e){var a=l.data(),t=o({},a,{open:e});return l.data(t),s.data(t),h},h.highValues=function(e){var a=l.data(),t=o({},a,{high:e});return l.data(t),s.data(t),h},h.lowValues=function(e){var a=l.data(),t=o({},a,{low:e});return l.data(t),s.data(t),h},h.closeValues=function(e){var a=l.data(),t=o({},a,{close:e});return l.data(t),s.data(t),h},h.bandwidth=function(e){return c.data(e),h},h.decorate=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],h):r},h.xScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],h):a},h.yScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],h):t},f(h,e,"context"),f(h,n,"lineWidth"),h},e.glPoint=function(){var e=P(),a=P(),t=J(),n=function(){},r=v().value(function(e,a){return e[a]}),o=v().value(function(e,a){return e[a]}),i=v().value(function(e,a){return e[a]}),l=V().mode(S.POINTS);l.buffers().attribute("aXValue",r).attribute("aYValue",o).attribute("aSize",i);var d=function(r){l.vertexShader(t.vertex()).fragmentShader(t.fragment()),e.coordinate(0),e(l),a.coordinate(1),a(l),n(l),l(r)};return d.xValues=function(e){return r.data(e),d},d.yValues=function(e){return o.data(e),d},d.sizes=function(e){return i.data(e),d},d.decorate=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],d):n},d.xScale=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],d):e},d.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],d):a},d.type=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],d):t},f(d,l,"context"),d},e.glScaleLinear=C,e.glScaleLog=_,e.glScalePow=B,e.lineWidth=re,e.pointAntiAlias=function(){return function(e){e.fragmentShader().appendBodyIfNotExists(Q.body)}},e.pointFill=function(){var e=[.86,.86,.86,1],a=function(a){a.fragmentShader().appendHeaderIfNotExists(j.header).appendBodyIfNotExists(j.body),a.buffers().uniform("uColor",m(e))};return a.color=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],a):e},a},e.pointStroke=function(){var e=[0,0,0,1],a=1,t=function(t){t.fragmentShader().appendHeaderIfNotExists(K.header).appendBodyIfNotExists(K.body),t.buffers().uniform("uEdgeColor",m(e)),t.buffers().uniform("uLineWidth",m(a))};return t.color=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],t):e},t.width=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],t):a},t},e.programBuilder=V,e.projectedAttributeBuilder=v,e.scaleMapper=w,e.shaderBuilder=y,e.squarePointShader=ee,e.symbolMapper=ne,e.uniformBuilder=m,e.vertexShaderSnippets=R,Object.defineProperty(e,"__esModule",{value:!0})});
